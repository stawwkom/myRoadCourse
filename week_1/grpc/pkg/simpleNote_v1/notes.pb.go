// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: notes.proto

package simpleNote_v1

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Определяем структуру NoteInfo для хранения основной информации о заметке
type NoteInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Author        string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	IsPublic      bool                   `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteInfo) Reset() {
	*x = NoteInfo{}
	mi := &file_notes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteInfo) ProtoMessage() {}

func (x *NoteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteInfo.ProtoReflect.Descriptor instead.
func (*NoteInfo) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{0}
}

func (x *NoteInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NoteInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NoteInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *NoteInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

// Определение структуры Note, которая включает в себя структуру NoteInfo, id, и время создания и обновления
type Note struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Info          *NoteInfo              `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	CreatedAt     *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_notes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{1}
}

func (x *Note) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Note) GetInfo() *NoteInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Note) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Note) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UpdateNoteInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         *wrappers.StringValue  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content       *wrappers.StringValue  `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Author        *wrappers.StringValue  `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	IsPublic      *wrappers.BoolValue    `protobuf:"bytes,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteInfo) Reset() {
	*x = UpdateNoteInfo{}
	mi := &file_notes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteInfo) ProtoMessage() {}

func (x *UpdateNoteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteInfo.ProtoReflect.Descriptor instead.
func (*UpdateNoteInfo) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateNoteInfo) GetTitle() *wrappers.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *UpdateNoteInfo) GetContent() *wrappers.StringValue {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UpdateNoteInfo) GetAuthor() *wrappers.StringValue {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *UpdateNoteInfo) GetIsPublic() *wrappers.BoolValue {
	if x != nil {
		return x.IsPublic
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *NoteInfo              `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_notes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRequest) GetInfo() *NoteInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	mi := &file_notes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{4}
}

func (x *CreateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_notes_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{5}
}

func (x *GetRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_notes_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{6}
}

func (x *GetResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int64                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_notes_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{7}
}

func (x *ListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         []*Note                `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"` // repeated = слайс в protobuf = возвращаем слайс Note
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_notes_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{8}
}

func (x *ListResponse) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Info          *UpdateNoteInfo        `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_notes_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRequest) GetInfo() *UpdateNoteInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_notes_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_notes_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_notes_proto protoreflect.FileDescriptor

const file_notes_proto_rawDesc = "" +
	"\n" +
	"\vnotes.proto\x12\rsimpleNote_v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1egoogle/protobuf/wrappers.proto\"o\n" +
	"\bNoteInfo\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12\x1b\n" +
	"\tis_public\x18\x04 \x01(\bR\bisPublic\"\xb9\x01\n" +
	"\x04Note\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12+\n" +
	"\x04info\x18\x02 \x01(\v2\x17.simpleNote_v1.NoteInfoR\x04info\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xeb\x01\n" +
	"\x0eUpdateNoteInfo\x122\n" +
	"\x05title\x18\x01 \x01(\v2\x1c.google.protobuf.StringValueR\x05title\x126\n" +
	"\acontent\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\acontent\x124\n" +
	"\x06author\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\x06author\x127\n" +
	"\tis_public\x18\x04 \x01(\v2\x1a.google.protobuf.BoolValueR\bisPublic\"<\n" +
	"\rCreateRequest\x12+\n" +
	"\x04info\x18\x01 \x01(\v2\x17.simpleNote_v1.NoteInfoR\x04info\" \n" +
	"\x0eCreateResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\x1c\n" +
	"\n" +
	"GetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"6\n" +
	"\vGetResponse\x12'\n" +
	"\x04note\x18\x01 \x01(\v2\x13.simpleNote_v1.NoteR\x04note\";\n" +
	"\vListRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\"9\n" +
	"\fListResponse\x12)\n" +
	"\x05notes\x18\x01 \x03(\v2\x13.simpleNote_v1.NoteR\x05notes\"R\n" +
	"\rUpdateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x121\n" +
	"\x04info\x18\x02 \x01(\v2\x1d.simpleNote_v1.UpdateNoteInfoR\x04info\"\x1f\n" +
	"\rDeleteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id2\xd5\x02\n" +
	"\rsimpleNote_v1\x12E\n" +
	"\x06Create\x12\x1c.simpleNote_v1.CreateRequest\x1a\x1d.simpleNote_v1.CreateResponse\x12<\n" +
	"\x03Get\x12\x19.simpleNote_v1.GetRequest\x1a\x1a.simpleNote_v1.GetResponse\x12?\n" +
	"\x04List\x12\x1a.simpleNote_v1.ListRequest\x1a\x1b.simpleNote_v1.ListResponse\x12>\n" +
	"\x06Update\x12\x1c.simpleNote_v1.UpdateRequest\x1a\x16.google.protobuf.Empty\x12>\n" +
	"\x06Delete\x12\x1c.simpleNote_v1.DeleteRequest\x1a\x16.google.protobuf.EmptyB=Z;template_course/week_1/grpc/pkg/simpleNote_v1;simpleNote_v1b\x06proto3"

var (
	file_notes_proto_rawDescOnce sync.Once
	file_notes_proto_rawDescData []byte
)

func file_notes_proto_rawDescGZIP() []byte {
	file_notes_proto_rawDescOnce.Do(func() {
		file_notes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notes_proto_rawDesc), len(file_notes_proto_rawDesc)))
	})
	return file_notes_proto_rawDescData
}

var file_notes_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_notes_proto_goTypes = []any{
	(*NoteInfo)(nil),             // 0: simpleNote_v1.NoteInfo
	(*Note)(nil),                 // 1: simpleNote_v1.Note
	(*UpdateNoteInfo)(nil),       // 2: simpleNote_v1.UpdateNoteInfo
	(*CreateRequest)(nil),        // 3: simpleNote_v1.CreateRequest
	(*CreateResponse)(nil),       // 4: simpleNote_v1.CreateResponse
	(*GetRequest)(nil),           // 5: simpleNote_v1.GetRequest
	(*GetResponse)(nil),          // 6: simpleNote_v1.GetResponse
	(*ListRequest)(nil),          // 7: simpleNote_v1.ListRequest
	(*ListResponse)(nil),         // 8: simpleNote_v1.ListResponse
	(*UpdateRequest)(nil),        // 9: simpleNote_v1.UpdateRequest
	(*DeleteRequest)(nil),        // 10: simpleNote_v1.DeleteRequest
	(*timestamp.Timestamp)(nil),  // 11: google.protobuf.Timestamp
	(*wrappers.StringValue)(nil), // 12: google.protobuf.StringValue
	(*wrappers.BoolValue)(nil),   // 13: google.protobuf.BoolValue
	(*empty.Empty)(nil),          // 14: google.protobuf.Empty
}
var file_notes_proto_depIdxs = []int32{
	0,  // 0: simpleNote_v1.Note.info:type_name -> simpleNote_v1.NoteInfo
	11, // 1: simpleNote_v1.Note.created_at:type_name -> google.protobuf.Timestamp
	11, // 2: simpleNote_v1.Note.updated_at:type_name -> google.protobuf.Timestamp
	12, // 3: simpleNote_v1.UpdateNoteInfo.title:type_name -> google.protobuf.StringValue
	12, // 4: simpleNote_v1.UpdateNoteInfo.content:type_name -> google.protobuf.StringValue
	12, // 5: simpleNote_v1.UpdateNoteInfo.author:type_name -> google.protobuf.StringValue
	13, // 6: simpleNote_v1.UpdateNoteInfo.is_public:type_name -> google.protobuf.BoolValue
	0,  // 7: simpleNote_v1.CreateRequest.info:type_name -> simpleNote_v1.NoteInfo
	1,  // 8: simpleNote_v1.GetResponse.note:type_name -> simpleNote_v1.Note
	1,  // 9: simpleNote_v1.ListResponse.notes:type_name -> simpleNote_v1.Note
	2,  // 10: simpleNote_v1.UpdateRequest.info:type_name -> simpleNote_v1.UpdateNoteInfo
	3,  // 11: simpleNote_v1.simpleNote_v1.Create:input_type -> simpleNote_v1.CreateRequest
	5,  // 12: simpleNote_v1.simpleNote_v1.Get:input_type -> simpleNote_v1.GetRequest
	7,  // 13: simpleNote_v1.simpleNote_v1.List:input_type -> simpleNote_v1.ListRequest
	9,  // 14: simpleNote_v1.simpleNote_v1.Update:input_type -> simpleNote_v1.UpdateRequest
	10, // 15: simpleNote_v1.simpleNote_v1.Delete:input_type -> simpleNote_v1.DeleteRequest
	4,  // 16: simpleNote_v1.simpleNote_v1.Create:output_type -> simpleNote_v1.CreateResponse
	6,  // 17: simpleNote_v1.simpleNote_v1.Get:output_type -> simpleNote_v1.GetResponse
	8,  // 18: simpleNote_v1.simpleNote_v1.List:output_type -> simpleNote_v1.ListResponse
	14, // 19: simpleNote_v1.simpleNote_v1.Update:output_type -> google.protobuf.Empty
	14, // 20: simpleNote_v1.simpleNote_v1.Delete:output_type -> google.protobuf.Empty
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_notes_proto_init() }
func file_notes_proto_init() {
	if File_notes_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notes_proto_rawDesc), len(file_notes_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notes_proto_goTypes,
		DependencyIndexes: file_notes_proto_depIdxs,
		MessageInfos:      file_notes_proto_msgTypes,
	}.Build()
	File_notes_proto = out.File
	file_notes_proto_goTypes = nil
	file_notes_proto_depIdxs = nil
}
